#!/usr/bin/env bash

#
# genpass - Generate a random password by picking from a word list
#

readonly wordlist='wordlist'

# http://mywiki.wooledge.org/BashFAQ/026

# returns random number from 0 to ($1-1) in global var 'r'.
rand() {
  local max=$(( 32768 / $1 * $1 ))
  while (( (r=$RANDOM) >= max )); do :; done
  r=$(( r % $1 ))
}

# check for a positive integer argument
if [[ $1 == *[!1-9]* ]]; then
  printf 'genpass: "%d" is not a positive integer\n' "$1" >&2
  exit 1
fi

# read the word list into memory, removing commented words;
# then remove the trailing empty element, if any:
#    http://mywiki.wooledge.org/BashFAQ/005#Handling_newlines_.28or_lack_thereof.29_at_the_end_of_a_file
unset lines n
while IFS= read -r 'lines[n++]'; do :; done < <(sed '/^#/d' "$wordlist")
[[ ${lines[n-1]} ]] || unset -v 'lines[--n]'

# output the random password
# default word number is 4
for i in $(seq ${1:-4}); do
  # pick a random available word
  rand $n
  printf '%s' "${lines[r]}"

  # remove the used word from the array to prevent duplicates
  lines=(${lines[@]:0:$r} ${lines[@]:$(( $r + 1 ))})
  n=$(( n - 1 ))
done

exit 0
